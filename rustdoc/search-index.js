var searchIndex = JSON.parse('{\
"calypso":{"doc":"","t":[17,7,7,0,0,5,5,5,7,3,11,11,12,12,12,11,11,5,11,11,12,12,11,12,12,12,12,12,12,11,11,11,11,12,0,0,5,5,5],"n":["BUG_REPORT_URL","DEFAULT_HOOK","GLOBAL","buildinfo","commands","init_panic_hook","main","report_ice","BUILD_INFO","BuildInfo","borrow","borrow_mut","cargo_features","cargo_profile","cargo_target_triple","clone","clone_into","construct_buildinfo","fmt","from","git_branch","git_commit","into","rustc_channel","rustc_commit_date","rustc_commit_hash","rustc_host_triple","rustc_llvm_version","rustc_version","to_owned","try_from","try_into","type_id","version","explain","internal","explain","buildinfo","internal"],"q":["calypso","","","","","","","","calypso::buildinfo","","","","","","","","","","","","","","","","","","","","","","","","","","calypso::commands","","calypso::commands::explain","calypso::commands::internal",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0],"f":[null,null,null,null,null,[[["arc",3]]],[[]],[[["str",15],["globalctxt",3],["panicinfo",3]],["calresult",6]],null,null,[[]],[[]],null,null,null,[[],["buildinfo",3]],[[]],[[],["buildinfo",3]],[[["formatter",3]],["result",6]],[[]],null,null,[[]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[["arc",3],["argmatches",3]],["calresult",6]],[[["arc",3]],["calresult",6]],[[["arc",3],["argmatches",3]],["calresult",6]]],"p":[[3,"BuildInfo"]]},\
"calypso_base":{"doc":"Base types and utilities for Calypso that don’t require …","t":[0,0,0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,8,3,3,12,12,0,11,11,12,10,12,11,11,12,12,10,12,12,10,12,12,11,11,10,12,12,11,11,11,11,10,12,12,11,11,0,12,3,11,11,12,11,11,11,11,11,12,11,11,12,11,12,11,12,11,12,11,12,11,11,11,11,3,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,12,11,12,11,12,11,11,12,11,11,11,11,12,7,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,3,13,4,3,13,3,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,12],"n":["span","streams","symbol","ui","Span","Spanned","add_hi","add_lo","between","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","contains","default","eq","eq","eq","fmt","fmt","from","from","from","from","from","get_hash","get_hash","hash","hash","hi","hi","into","into","is_dummy","is_empty","len","lo","lo","ne","ne","new","new","new_dummy","new_shrunk","overlaps","partial_cmp","shrink_to_hi","shrink_to_lo","span","span","sub_hi","sub_lo","substitute_dummy","to","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","until","value","value","value_owned","with_hi","with_lo","Stream","Streamed","StringStream","chars_passed","elements","generic","gorge_while","gorge_while_eq","indices","is_at_end","iter","next_if","next_if_eq","num_chars","num_passed","peek","peek","peek","peek2","peek2","peek2","peek2_cond","peek2_eq","peek3","peek3","peek3","peek3_cond","peek3_eq","peek_cond","peek_eq","prev","prev","prev","prev_cond","prev_eq","str","string","Streamed","borrow","borrow_mut","elements","from","index","into","into_iter","is_at_end","iter","new","next","num_passed","peek","peek","peek2","peek2","peek3","peek3","prev","prev","size_hint","try_from","try_into","type_id","StringStream","borrow","borrow_mut","chars_passed","clone","clone_into","fmt","from","index","indices","into","into_iter","is_at_end","new","next","num_chars","peek","peek","peek2","peek2","peek3","peek3","prev","prev","size_hint","slice","string","to_owned","try_from","try_into","type_id","0","GLOBAL_INTERNER","Interned","PotentiallyInterned","Symbol","Uninterned","as_ref","as_str","as_u32","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","get_hash","get_interner","hash","intern","intern_static","intern_static_2","into","into","is_empty","is_keyword","kw","ne","ne","potentially_intern","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","EMPTY","Empty","FALSE","False","Keyword","TRUE","True","UNDERSCORE","Under","__private_field","__private_field","__private_field","__private_field","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref","eq","eq","eq","eq","eq","fmt","from","from","from","from","from","from","init","initialize","initialize","initialize","initialize","into","into","into","into","into","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Emitter","Emitters","borrow","borrow","borrow_mut","borrow_mut","buf","buffer","deref","deref_mut","err","error","flush","from","from","info","into","into","message_general","new","new","newline","note","out","parse_color_pref","print","try_from","try_from","try_into","try_into","type_id","type_id","warn","writer"],"q":["calypso_base","","","","calypso_base::span","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::streams","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::streams::generic","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::streams::str","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::symbol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::symbol::kw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_base::ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>Span</code> and <code>Spanned</code> types.","Utilities for handling streams of data","Utilities for interned strings (symbols)","User interface utilities (i.e. color)","The location in a slice in which some object spans.","An object that’s associated with a <code>Span</code>","","","Returns a <code>Span</code> between the end of <code>self</code> to the beginning …","","","","","","","","","","Returns <code>true</code> if <code>self</code> fully encloses <code>other</code>.","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if this is a dummy span","Returns true if if <code>hi == lo</code>","","","","","","","Associate a span with a value.","Create a dummy span (that has a span equivalent to the …","","Returns <code>true</code> if <code>self</code> touches <code>other</code>.","","Returns a new span representing an empty span at the end …","Returns a new span representing an empty span at the …","Get the value’s <code>Span</code>","","","","Returns <code>self</code> if <code>self</code> is not a dummy span, and <code>other</code> …","Returns a <code>Span</code> that would enclose both <code>self</code> and <code>end</code>.","","","","","","","","","Returns a <code>Span</code> from the beginning of <code>self</code> until the …","Get a reference to the value.","","Get the owned value.","","","A trait for streamed data. For a stream, <code>EOF</code> means either …","A generic stream.","A stream emitting tuples of byte locations and characters …","The number of characters passed so far.","A reference to the underlying slice","Generic streams","Keep consuming elements while the condition is true and …","Keep consuming elements while the element is equal to …","The stream’s current char and index","This stream can no longer produce elements if this …","The stream’s current char and index","Consume the next element if the condition is true.","Consume the next element if it is equal to <code>expected</code>.","The cached number of characters in the string, as …","The number of elements passed so far.","Peek at the value one element ahead, without consuming it.","1elem peek","1ch peek","Peek at the value two element ahead, without consuming …","2elem peek","2ch peek","Returns the value of the condition, wrapped in an <code>Option</code>. …","Returns <code>Some(true)</code> if the value two elements ahead is …","Peek at the value three element ahead, without consuming …","3elem peek","3ch peek","Returns the value of the condition, wrapped in an <code>Option</code>. …","Returns <code>Some(true)</code> if the value three elements ahead is …","Returns the value of the condition, wrapped in an <code>Option</code>. …","Returns <code>Some(true)</code> if the value one element ahead is …","Peek at the value one element behind, without moving …","1elem backwards peek","1ch backwards peek","Returns the value of the condition, wrapped in an <code>Option</code>. …","Returns <code>Some(true)</code> if the value one element behind is …","String streams","A reference to the underlying string","A generic stream.","","","A reference to the underlying slice","","","","","","The stream’s current char and index","","","The number of elements passed so far.","","1elem peek","","2elem peek","","3elem peek","","1elem backwards peek","","","","","A stream emitting tuples of byte locations and characters …","","","The number of characters passed so far.","","","","","","The stream’s current char and index","","","","","","The cached number of characters in the string, as …","","1ch peek","","2ch peek","","3ch peek","","1ch backwards peek","","","A reference to the underlying string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A structure handling emitting messages to the terminal. …","A helper struct containing the emitters for stdout and …","","","","","","Create a new buffer based on the color preferences of …","","","Emits to stderr","Emit an error. Note that this function <strong>will</strong> reset the …","Flush the emitter. This will clear the internal buffer.","","","Emit an informational message. Note that this function <strong>…","","","","Create a new instance of this structure with the given …","Create a new emitter.","Add a newline to the internal buffer.","Emit a note. Note that this function <strong>will</strong> reset the …","Emits to stdout","Parse a color preference (<code>always</code>, <code>ansi</code>, <code>auto</code>, anything …","Add the string provided to the internal buffer verbatim. …","","","","","","","Emit a warning. Note that this function <strong>will</strong> reset the …",""],"i":[0,0,0,0,0,0,1,1,1,1,2,1,2,1,2,1,2,1,1,1,1,2,2,1,2,1,1,2,2,2,1,2,1,2,1,1,1,2,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,2,2,1,1,1,1,1,2,1,2,1,2,1,2,1,2,2,2,1,1,0,0,0,3,4,0,5,5,3,5,4,5,5,3,4,5,4,3,5,4,3,5,5,5,4,3,5,5,5,5,5,4,3,5,5,0,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,6,0,7,0,0,7,7,6,6,6,7,6,7,6,7,6,7,6,6,6,6,6,7,6,6,7,7,6,6,7,6,0,6,6,6,6,6,7,6,6,0,6,7,7,6,7,6,7,6,7,6,7,6,7,0,8,0,8,0,0,8,0,8,9,10,11,12,9,10,11,12,8,9,10,11,12,8,8,8,9,10,11,12,9,10,11,12,8,8,9,10,11,12,8,8,0,9,10,11,12,9,10,11,12,8,8,9,10,11,12,8,9,10,11,12,8,9,10,11,12,8,0,0,13,14,13,14,14,14,14,14,13,14,14,13,14,14,13,14,14,13,14,14,14,13,0,14,13,14,13,14,13,14,14,14],"f":[null,null,null,null,null,null,[[["usize",15]],["span",3]],[[["usize",15]],["span",3]],[[["span",3]],["span",3]],[[]],[[]],[[]],[[]],[[],["span",3]],[[],["spanned",3]],[[]],[[]],[[["span",3]],["ordering",4]],[[["span",3]],["bool",15]],[[]],[[["span",3]],["bool",15]],[[["spanned",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["range",3],["usize",15]]],[[],[["spanned",3],["char",15]]],[[]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["usize",15]],null,[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],null,[[["span",3]],["bool",15]],[[["spanned",3]],["bool",15]],[[["usize",15]]],[[["span",3]]],[[]],[[["usize",15]]],[[["span",3]],["bool",15]],[[["span",3]],[["option",4],["ordering",4]]],[[],["span",3]],[[],["span",3]],[[],["span",3]],null,[[["usize",15]],["span",3]],[[["usize",15]],["span",3]],[[["span",3]],["span",3]],[[["span",3]],["span",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["span",3]],["span",3]],[[]],null,[[]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,[[],["usize",15]],[[],["usize",15]],null,[[],["bool",15]],null,[[],["option",4]],[[],["option",4]],null,null,[[],["option",4]],null,null,[[],["option",4]],null,null,[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],[[],["option",4]],null,null,[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],[[],["option",4]],null,null,[[],[["bool",15],["option",4]]],[[],[["bool",15],["option",4]]],null,null,null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[]],[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],null,[[],["stringstream",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["bool",15]],[[["str",15]]],[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[]],[[],["str",15]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["u32",15]],[[]],[[]],[[]],[[]],[[],["symbol",3]],[[],["potentiallyinterned",4]],[[]],[[]],[[["symbol",3]],["bool",15]],[[["false",3]],["bool",15]],[[["true",3]],["bool",15]],[[["underscore",3]],["bool",15]],[[["empty",3]],["bool",15]],[[["potentiallyinterned",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["keyword",4]]],[[]],[[]],[[],["u64",15]],[[],["threadedrodeo",3]],[[]],[[["str",15]]],[[["str",15]]],[[["str",15]]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,[[["symbol",3]],["bool",15]],[[["potentiallyinterned",4]],["bool",15]],[[["str",15]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keyword",4]],[[]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[],["symbol",3]],[[["empty",3]],["bool",15]],[[["underscore",3]],["bool",15]],[[["true",3]],["bool",15]],[[["false",3]],["bool",15]],[[["keyword",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["symbol",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],null,[[],["buffer",3]],[[]],[[]],null,[[["option",4],["str",15]],["calresult",6]],[[],["calresult",6]],[[]],[[]],[[["option",4],["str",15]],["calresult",6]],[[]],[[]],[[["str",15],["option",4],["color",4],["str",15]],["calresult",6]],[[["colorchoice",4]]],[[["bufferwriter",3]]],[[],["calresult",6]],[[["option",4],["str",15]],["calresult",6]],null,[[["stream",4],["str",15]],["colorchoice",4]],[[["str",15]],["calresult",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["option",4],["str",15]],["calresult",6]],null],"p":[[3,"Span"],[3,"Spanned"],[3,"StringStream"],[3,"Streamed"],[8,"Stream"],[3,"Symbol"],[4,"PotentiallyInterned"],[4,"Keyword"],[3,"EMPTY"],[3,"UNDERSCORE"],[3,"TRUE"],[3,"FALSE"],[3,"Emitters"],[3,"Emitter"]]},\
"calypso_common":{"doc":"","t":[0,3,11,11,12,11,12,11,12,11,11,11],"n":["gcx","GlobalCtxt","borrow","borrow_mut","emit","from","grcx","into","sourcemgr","try_from","try_into","type_id"],"q":["calypso_common","calypso_common::gcx","","","","","","","","","",""],"d":["","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],null,[[]],null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"GlobalCtxt"]]},\
"calypso_diagnostic":{"doc":"","t":[0,0,14,0,0,0,12,12,13,3,3,13,13,4,13,13,13,4,6,13,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,4,6,13,13,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,12,11,12,11,11,11,11,12,11,11,11,11,11,11,3,12,11,11,11,11,11,11,11,11,11],"n":["diagnostic","error","gen_error","prelude","report","types","0","1","Bug","Builder","Diagnostic","Error","Help","LabelStyle","Note","Primary","Secondary","Severity","SourceMgr","Warning","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone_into","clone_into","code","code","code","eq","fmt","from","from","from","get_hash","hash","into","into","into","label","labels","level","message","message","new","note","notes","partial_cmp","reason","rendered","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Diagnostic","DiagnosticError","Rendering","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","CalError","CalResult","Fmt","FromUtf8","Io","LabelStyle","Other","Primary","Secondary","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","other_is","partial_cmp","source","to_owned","to_string","try_downcast","try_downcast_mut","try_downcast_ref","try_from","try_from","try_into","try_into","type_id","type_id","GlobalReportingCtxt","borrow","borrow_mut","default","errors","errors","fatal","fatal","from","into","new","nonfatals","nonfatals","report_fatal","report_non_fatal","report_syncd","try_from","try_into","type_id","DIAGNOSTICS","__private_field","borrow","borrow_mut","deref","from","initialize","into","try_from","try_into","type_id"],"q":["calypso_diagnostic","","","","","","calypso_diagnostic::diagnostic","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_diagnostic::error","","","","","","","","","","","","","","","calypso_diagnostic::prelude","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","calypso_diagnostic::report","","","","","","","","","","","","","","","","","","","calypso_diagnostic::types","","","","","","","","","",""],"d":["","","","","","","","","An unexpected bug.","","","An error.","A help message.","","A note.","Labels that describe the primary cause of a diagnostic.","Labels that provide additional context for a diagnostic.","A severity level for diagnostic messages.","","A warning.","","","","","","","Build the diagnostic. This pre-renders the diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An extension of [<code>CalError</code>] used for diagnostics.","","","","","","","","","","","","","","The Calypso error type.","A handy alias for [<code>Result<T, CalError></code>], genericized over …","Formatting errors","UTF-8 decoding errors","IO errors","","Any other error, using [<code>anyhow</code>]","Labels that describe the primary cause of a diagnostic.","Labels that provide additional context for a diagnostic.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,2,0,0,2,2,0,2,3,3,0,0,2,1,4,2,1,4,2,4,4,2,4,2,1,4,4,2,2,1,4,2,2,2,1,4,2,4,4,4,4,4,4,4,4,2,1,1,4,2,1,4,2,1,4,2,1,4,2,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,0,6,3,3,6,3,6,3,3,3,3,6,6,3,6,6,6,6,6,6,3,6,3,6,3,6,3,6,6,6,6,6,3,6,3,6,3,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,8,8,8,8,8,8,8,8,8,8],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["emitters",3],["sourcemgr",6]],[["diagnostic",3],["calresult",6]]],[[],["builder",3]],[[],["severity",4]],[[]],[[]],[[],[["option",4],["str",15]]],[[]],null,[[["severity",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[],["u64",15]],[[]],[[]],[[]],[[]],[[["labelstyle",4],["usize",15],["span",3]]],null,null,[[]],null,[[["severity",4]]],[[]],null,[[["severity",4]],[["ordering",4],["option",4]]],[[],["str",15]],[[],["buffer",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["diagrendererror",4]]],[[]],[[]],[[],[["error",8],["option",4]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["labelstyle",4]],[[]],[[["labelstyle",4]],["bool",15]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["error",3]],["calerror",4]],[[["error",3]],["calerror",4]],[[["diagnosticerror",4]]],[[["fromutf8error",3]],["calerror",4]],[[]],[[["error",3]],["calerror",4]],[[]],[[]],[[]],[[],["bool",15]],[[["labelstyle",4]],[["ordering",4],["option",4]]],[[],[["option",4],["error",8]]],[[]],[[],["string",3]],[[],[["result",4],["calerror",4]]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,[[],[["diagnostic",3],["option",4]]],null,[[]],[[]],[[]],[[]],null,[[["diagnostic",3]]],[[["diagnostic",3]]],[[["diagnostic",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["hashmap",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Diagnostic"],[4,"Severity"],[4,"LabelStyle"],[3,"Builder"],[4,"DiagnosticError"],[4,"CalError"],[3,"GlobalReportingCtxt"],[3,"DIAGNOSTICS"]]},\
"calypso_error":{"doc":"Error-handling utilities and types for use in Calypso.","t":[4,6,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CalError","CalResult","Fmt","FromUtf8","Io","Other","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","into","other_is","source","to_string","try_downcast","try_downcast_mut","try_downcast_ref","try_from","try_into","type_id"],"q":["calypso_error","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The Calypso error type.","A handy alias for [<code>Result<T, CalError></code>], genericized over …","Formatting errors","UTF-8 decoding errors","IO errors","Any other error, using [<code>anyhow</code>]","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["fromutf8error",3]]],[[]],[[["error",3]]],[[["error",3]]],[[["error",3]]],[[]],[[],["bool",15]],[[],[["option",4],["error",8]]],[[],["string",3]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[4,"CalError"]]},\
"calypso_repl":{"doc":"","t":[3,6,3,11,11,12,11,11,11,11,12,11,12,12,11,11,12,12,12,12,12,11,11,12,11,11,12,11,11,11,12,11,11,11,11,11,11,11],"n":["Command","Eval","Repl","alias","aliases","aliases","borrow","borrow","borrow_mut","borrow_mut","cache","cache_command","cmd_regex","cmds","command","commands","ctx","description","editor","eval","eval","from","from","help","into","into","name","new","new","prefix","prefix","run","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["calypso_repl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A closure that evaluates some input with some context …","A struct for doing REPL-like activities. This does not …","Add an alias","Extend the aliases vector","Aliases for this command","","","","","A HashMap containing references to the commands. This is …","","Regex for commands","Meta-command definitions. This is a <code>Vec</code> as you may want …","Add a command","Extend the commands vector","The context","The description of the command","The Rustyline context","A closure that evaluates the input and returns something …","A closure that evaluates the command’s input (excluding …","","","The help description of the command","","","The command’s name","","","","Prefix for commands. Default: <code>:</code>","Run the REPL.","","","","","",""],"i":[0,0,0,1,1,1,2,1,2,1,2,2,2,2,2,2,2,1,2,2,1,2,1,1,2,1,1,2,1,2,2,2,2,1,2,1,2,1],"f":[null,null,null,[[["string",3]]],[[["string",3],["vec",3]]],null,[[]],[[]],[[]],[[]],null,[[["arc",3]]],null,null,[[["command",3]]],[[["arc",3],["vec",3]]],null,null,null,null,null,[[]],[[]],null,[[]],[[]],null,[[["eval",6]]],[[["string",3],["eval",6]]],[[["string",3]]],null,[[["str",15]],[["result",4],["readlineerror",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Command"],[3,"Repl"]]},\
"saturnvm":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"saturnvm_macros":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"saturnvm_macros_impl":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};